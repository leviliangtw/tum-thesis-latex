@book{latex,
  title = {LaTeX : A Documentation Preparation System User's Guide and Reference Manual},
  publisher = {Addison-Wesley Professional},
  year = {1994},
  author = {Leslie Lamport}
}


@inproceedings{feng_automatic_2007,
	title = {Automatic Model Generation for Black Box Real-Time Systems},
	doi = {10.1109/DATE.2007.364412},
	abstract = {Embedded systems are often assembled from black box components. System-level analyses, including verification and timing analysis, typically assume the system description, such as {RTL} or source code, as an input. There is therefore a need to automatically generate formal models of black box components to facilitate analysis. We propose a new method to generate models of real-time embedded systems based on machine learning from execution traces, under a given hypothesis about the system's model of computation. Our technique is based on a novel formulation of the model generation problem as learning a dependency graph that indicates partial ordering between tasks. Tests based on an industry case study demonstrate that the learning algorithm can scale up and that the deduced system model accurately reflects dependencies between tasks in the original design. These dependencies help us formally prove properties of the system and also extract data dependencies that are not explicitly stated in the specifications of black box components},
	eventtitle = {Automation \& Test in Europe Conference \& Exhibition 2007 Design},
	pages = {1--6},
	booktitle = {Automation \& Test in Europe Conference \& Exhibition 2007 Design},
	author = {Feng, Thomas Huining and Wang, Lynn and Zheng, Wei and Kanajan, Sri and Seshia, Sanjit A.},
	date = {2007-04},
	note = {{ISSN}: 1558-1101},
	keywords = {Algorithm design and analysis, Assembly systems, Computational modeling, Embedded computing, Embedded system, Machine learning, Machine learning algorithms, Real time systems, System testing, Timing},
	file = {IEEE Xplore Full Text PDF:/home/jliang/Zotero/storage/EPJ8RLTX/Feng et al. - 2007 - Automatic Model Generation for Black Box Real-Time.pdf:application/pdf},
}

@inproceedings{ostrowski_diagnosing_2011,
	title = {Diagnosing Latency in Multi-Tier Black-Box Services},
	booktitle = {5th Workshop on Large Scale Distributed Systems and Middleware ({LADIS} 2011)},
	author = {Ostrowski, Krzysztof and Mann, Gideon and Sandler, Mark},
	date = {2011},
	file = {Full Text PDF:/home/jliang/Zotero/storage/6FUW2RGB/Ostrowski et al. - 2011 - Diagnosing Latency in Multi-Tier Black-Box Service.pdf:application/pdf},
}

@article{neves_detailed_2021,
	title = {Detailed black-box monitoring of distributed systems},
	volume = {21},
	doi = {10.1145/3477133.3477135},
	abstract = {Modern containerized distributed systems, such as big data storage and processing stacks or micro-service based applications, are inherently hard to monitor and optimize, as resource usage does not directly match hardware resources due to multiple virtualization layers. For instance, interapplication traffic is an important factor in as it directly indicates how components interact, it has not been possible to accurately monitor it in an application independent way and without severe overhead, thus putting it out of reach of cloud platforms.
In this paper we present an efficient black-box monitoring approach for gathering detailed structural information of collaborating processes in a distributed system that can be queried for various purposes, as it includes both information about processes, containers, and hosts, as well as resource usage and amount of data exchanged. The key to achieving high detail and low overhead without custom application instrumentation is to use a kernel-aided event driven strategy. We validate a prototype implementation by applying it to multi-platform microservice deployments, evaluate its performance with micro-benchmarks, and demonstrate its usefulness for container placement in a distributed data storage and processing stack (i.e., Cassandra and Spark).},
	pages = {24--36},
	journaltitle = {{ACM} {SIGAPP} Applied Computing Review},
	author = {Neves, Francisco and Vilaça, Ricardo and Pereira, José},
	date = {2021-03-01},
	file = {Neves et al. - 2021 - Detailed black-box monitoring of distributed syste.pdf:/home/jliang/Zotero/storage/YHRL9Q5W/Neves et al. - 2021 - Detailed black-box monitoring of distributed syste.pdf:application/pdf},
}

@online{datadog_run_nodate,
	title = {Run Synthetic Tests from Private Locations},
	url = {https://docs.datadoghq.com/synthetics/private_locations/},
	abstract = {Run Synthetic {API} and browser tests from private locations},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_browser_nodate,
	title = {Browser Tests},
	url = {https://docs.datadoghq.com/synthetics/browser_tests/},
	abstract = {Simulate and monitor user journeys from specific locations.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_multistep_nodate,
	title = {Multistep {API} Tests},
	url = {https://docs.datadoghq.com/synthetics/multistep/},
	abstract = {Chain requests to monitor sophisticated transactions on your key services.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_api_nodate,
	title = {{API} Tests},
	url = {https://docs.datadoghq.com/synthetics/api_tests/},
	abstract = {Simulate requests on your public and internal services},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_synthetic_nodate,
	title = {Synthetic Monitoring},
	url = {https://docs.datadoghq.com/synthetics/},
	abstract = {Use automated testing to ensure the most critical parts of your systems and applications are up and running from various locations around the world.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_getting_nodate,
	title = {Getting Started with Private Locations},
	url = {https://docs.datadoghq.com/getting_started/synthetics/private_location/},
	abstract = {Datadog, the leading service for cloud-scale monitoring.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_getting_nodate-1,
	title = {Getting Started with Browser Tests},
	url = {https://docs.datadoghq.com/getting_started/synthetics/browser_test/},
	abstract = {Datadog, the leading service for cloud-scale monitoring.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
}

@online{datadog_getting_nodate-2,
	title = {Getting Started with {API} Tests},
	url = {https://docs.datadoghq.com/getting_started/synthetics/api_test/},
	abstract = {Datadog, the leading service for cloud-scale monitoring.},
	titleaddon = {Datadog Infrastructure and Application Monitoring},
	author = {Datadog},
	urldate = {2023-05-21},
	langid = {english},
	file = {Snapshot:/home/jliang/Zotero/storage/XBX82LVR/api_test.html:text/html},
}

@online{datadog_getting_nodate-3,
	title = {Getting Started with Synthetic Monitoring},
	url = {https://docs.datadoghq.com/getting_started/synthetics/},
	author = {Datadog},
	urldate = {2023-05-21},
	file = {Getting Started with Synthetic Monitoring:/home/jliang/Zotero/storage/J7VKB7AB/synthetics.html:text/html},
}

@online{oreilly_spotlight_nodate,
	title = {Spotlight on Cloud: Using Prometheus for Black Box Monitoring with Aaron Wieczorek},
	url = {https://learning.oreilly.com/videos/spotlight-on-cloud/0636920360216/0636920360216-video328883/},
	shorttitle = {Spotlight on Cloud},
	titleaddon = {O'Reilly Online Learning},
	author = {O'Reilly},
	urldate = {2023-05-21},
	langid = {english},
	file = {Snapshot:/home/jliang/Zotero/storage/NJVYVEE8/0636920360216-video328883.html:text/html},
}

@article{brondolin_black-box_2020,
	title = {A Black-box Monitoring Approach to Measure Microservices Runtime Performance},
	volume = {17},
	issn = {1544-3566},
	url = {https://dl.acm.org/doi/10.1145/3418899},
	doi = {10.1145/3418899},
	abstract = {Microservices changed cloud computing by moving the applications’ complexity from one monolithic executable to thousands of network interactions between small components. Given the increasing deployment sizes, the architectural exploitation challenges, and the impact on data-centers’ power consumption, we need to efficiently track this complexity. Within this article, we propose a black-box monitoring approach to track microservices at scale, focusing on architectural metrics, power consumption, application performance, and network performance. The proposed approach is transparent w.r.t. the monitored applications, generates less overhead w.r.t. black-box approaches available in the state-of-the-art, and provides fine-grain accurate metrics.},
	pages = {34:1--34:26},
	number = {4},
	journaltitle = {{ACM} Trans. Archit. Code Optim.},
	author = {Brondolin, Rolando and Santambrogio, Marco D.},
	urldate = {2023-05-21},
	date = {2020-11-10},
	keywords = {cloud computing, docker, kubernetes, Microservices, network performance monitoring, performance monitoring, power attribution},
	file = {Full Text PDF:/home/jliang/Zotero/storage/KU4AJLZE/Brondolin and Santambrogio - 2020 - A Black-box Monitoring Approach to Measure Microse.pdf:application/pdf},
}

@inproceedings{filipe_client-side_2017,
	title = {Client-side black-box monitoring for web sites},
	doi = {10.1109/NCA.2017.8171343},
	abstract = {In spite of their growing maturity, current web monitoring tools are unable to observe all operating conditions. For example, clients in different geographical locations might get very diverse latencies to the server; the network between client and server might be slow; or third-party servers with external page resources might underperform. Ultimately, only the clients can determine whether a site is up and running in good conditions. In this paper, we use the response times experienced by clients, to infer about server and network performance. The goal is to detect internal and external bottlenecks doing black-box monitoring, in particular {CPU} (internal) and network (external). We aim to determine to what extent are the clients able to tell one type of bottleneck from the other, i.e., what kind of information do the server and network leak, regarding their operating conditions. To answer this question, we resort to an empirical approach. We submit an {HTTP} server and network to a large number of operating conditions and train two machine learning algorithms, a linear and a non-linear one, to identify the cause of the congestion affecting the system. Results show that the server and network leak information to a level of detail that allows sorting out {CPU} from network bottlenecks, or even a combination of the two, in a large spectrum of cases. This suggests that a black-box monitoring approach is not only possible, but promising, as it may complement traditional white-box approaches.},
	eventtitle = {2017 {IEEE} 16th International Symposium on Network Computing and Applications ({NCA})},
	pages = {1--5},
	booktitle = {2017 {IEEE} 16th International Symposium on Network Computing and Applications ({NCA})},
	author = {Filipe, Ricardo and Paiva, Rui Pedro and Araujo, Filipe},
	date = {2017-10},
	keywords = {Analytics, Black-box monitoring, Browsers, Client-side monitoring, Measurement, Monitoring, Selenium, Servers, Time factors, Tools, Web-site monitoring},
	file = {IEEE Xplore Abstract Record:/home/jliang/Zotero/storage/MZCER2NP/8171343.html:text/html;IEEE Xplore Full Text PDF:/home/jliang/Zotero/storage/N3VCS8FY/Filipe et al. - 2017 - Client-side black-box monitoring for web sites.pdf:application/pdf},
}

@book{neves_black-box_2020,
	title = {Black-box inter-application traffic monitoring for adaptive container placement},
	pagetotal = {259},
	author = {Neves, Francisco and Vilaça, Ricardo and Pereira, José},
	date = {2020-03-30},
	doi = {10.1145/3341105.3374007},
	note = {Pages: 266},
	file = {Full Text:/home/jliang/Zotero/storage/L93WUCSB/Neves et al. - 2020 - Black-box inter-application traffic monitoring for.pdf:application/pdf},
}

@online{prometheus_overview_nodate,
	title = {Overview {\textbar} Prometheus},
	url = {https://prometheus.io/docs/introduction/overview/},
	abstract = {An open-source monitoring system with a dimensional data model, flexible query language, efficient time series database and modern alerting approach.},
	author = {Prometheus},
	urldate = {2023-05-26},
	langid = {english},
	file = {Snapshot:/home/jliang/Zotero/storage/JR9DREUR/overview.html:text/html},
}

@software{prometheus_blackbox_2023,
	title = {Blackbox exporter},
	rights = {Apache-2.0},
	url = {https://github.com/prometheus/blackbox_exporter},
	abstract = {Blackbox prober exporter},
	publisher = {Prometheus},
	author = {Prometheus},
	urldate = {2023-05-26},
	date = {2023-05-26},
	note = {original-date: 2015-09-05T14:45:00Z},
	keywords = {blackbox-exporter, icmp, prometheus, prometheus-exporter},
}

@article{beizer_black_1996,
	title = {Black Box Testing: Techniques for Functional Testing of Software and Systems},
	volume = {13},
	issn = {1937-4194},
	doi = {10.1109/MS.1996.536464},
	shorttitle = {Black Box Testing},
	pages = {98--},
	number = {5},
	journaltitle = {{IEEE} Software},
	author = {Beizer, B. and Wiley, J.},
	date = {1996-09},
	note = {Conference Name: {IEEE} Software},
	keywords = {System testing, Software systems, Software testing},
	file = {IEEE Xplore Full Text PDF:/home/jliang/Zotero/storage/7QHLYVDE/Beizer and Wiley - 1996 - Black Box Testing Techniques for Functional Testi.pdf:application/pdf},
}

@inproceedings{bertolino_software_2003,
	location = {Berlin, Heidelberg},
	title = {Software testing research and practice},
	isbn = {978-3-540-00624-4},
	series = {{ASM}'03},
	abstract = {The paper attempts to provide a comprehensive view of the field of software testing. The objective is to put all the relevant issues into a unified context, although admittedly the overview is biased towards my own research and expertise. In view of the vastness of the field, for each topic problems and approaches are only briefly tackled, with appropriate references provided to dive into them. I do not mean to give here a complete survey of software testing. Rather I intend to show how an unwieldy mix of theoretical and technical problems challenge software testers, and that a large gap exists between the state of the art and of the practice.},
	pages = {1--21},
	booktitle = {Proceedings of the abstract state machines 10th international conference on Advances in theory and practice},
	publisher = {Springer-Verlag},
	author = {Bertolino, Antonia},
	urldate = {2023-05-27},
	date = {2003-03-03},
	keywords = {Finite State Machine, Software Reliability, Software Test, Test Criterion, Test Suite},
	file = {Full Text PDF:/home/jliang/Zotero/storage/3XLTKS3A/Bertolino - 2003 - Software Testing Research and Practice.pdf:application/pdf},
}

@book{jain_art_1991,
	title = {The Art of Computer Systems Performance Analysis: Techniques For Experimental Design, Measurement, Simulation, and Modeling, {NY}: Wiley},
	shorttitle = {The Art of Computer Systems Performance Analysis},
	abstract = {Professor Jain has written a text on the performance analysis of computer systems which can serve as a reference for both specialists and nonspecialists alike. His text is divided into six parts, each of which consists of a half-dozen or so chapters, and covers diverse topics ranging from Measurement Tools to Experimental Design. Each part of this reference text presumes a minimum of exposure to the field and little or no facility with mathematical technique. The author’s style is light and even entertaining, although it is clear that significant practical experience has informed the overall design of the text and the specific material selected. As the author correctly states in his introduction: “There are many books on computer systems performance. These books discuss only one or two aspects of performance analysis, with a majority of the books being queueing theoretic. Queueing theory is admittedly a helpful tool, but knowledge of simulation, measurement techniques, data analysis and experimental design is invaluable.” His aim was to fill a void by writing a book that integrates these rather diverse aspects of performance analysis, and I believe that he has largely succeeded. Part I of his text, “An Overview of Performance Analysis,” discusses performance techniques and metrics, but only after presenting common mistakes which can be made (consciously and otherwise) in presenting performance data and reaching conclusions. This part of the text sets the style: short chapters with witty headings, each of which emphasizes central ideas and encapsulates significant results in a bold face “box.” Each chapter ends with a list of exercises and each part ends with a list of references for further reading. Part {II} studies measurement techniques and tools, beginning with a discussion of workload selection and their characterization. Software and hardware monitors, capacity planning, and the art of data presentation is surveyed and this part ends with a discussion of “ratio games.” The witty and particularly relevant heading for this last topic is: “If you can’t convince them, confuse them.” Part {III} is entitled “Probability Theory and Statistics”, with the emphasis not surprisingly on the latter. Confidence interval estimation, a brief mention of hypothesis testing, and a discussion of regression models completes this part. Although this part is an attempt to make the text self-contained, one obviously cannot do justice to these concepts in a quick survey, and the author’s attempt is no exception. Part {IV} is a serious attempt to survey experimental design and analysis techniques. Factorial designs with and without replication, fractional factorial designs, and one- and two-factor experiments are considered in succession. These topics are often ignored by the performance analysis community, and they are a welcome addition to a text of this kind. Part V is an introduction to simulation techniques, and Part {VI} surveys simple and widely used queuing models. The author explains the major pitfalls of a simulation clearly and with emphasis – beginning Part V with sage advice: “The best advice to those about to embark on a very large simulation is often the same as Punch’s famous advice to those about to marry: Don’t!” Part {IV} is a brief introduction to queueing theory which only brushes the surface of this important performance analysis tool. Nevertheless, the standard models (from the M/M/1 single-server model through product form queueing networks) are explained briefly and their essential formulas are recorded. This last part of the text has the form of a “cook book,” and the better part of wisdom to this reviewer would have been to forgo the more complex models (queueing networks certainly), and emphasize the more widely used and more easily digested single-server models. Professor Jain has drawn on his considerable practical experience at the Digital Equipment Corporation in writing this book, and some of the material has been used by him in a graduate seminar on computer systems at the Massachusetts Institute of Technology. Overall, this text draws together much of the material required by the practicing performance analyst in an enjoyable and easo-to-read form.},
	author = {Jain, Raj},
	date = {1991-04-01},
	file = {Full Text PDF:/home/jliang/Zotero/storage/IKRISMSB/Jain - 1991 - The Art of Computer Systems Performance Analysis .pdf:application/pdf},
}

@book{jorgensen_software_2021,
	title = {Software Testing: A Craftsman's Approach},
	isbn = {978-1-00-316844-7},
	shorttitle = {Software Testing},
	abstract = {The fifth edition of Software Testing—A Craftsman's Approach appears 25 years after the first edition and now there is a co-author, Dr. Byron {DeVries}. Together, Paul and Byron have 32 years of industrial experience and a few more years of university teaching and research in Software Engineering. Paul’s testing experience is on telephone switching systems software; Byron’s is on avionics systems. The book has evolved over four editions and 25 years of classroom and industrial use. We continue the pattern of presenting theory, using it to describe testing techniques, and illustrating all of this with carefully selected examples. We retained some of the classical examples and replaced others with a comprehensive web-based example, the Foodies Wish List, that is used throughout where appropriate. This lends a unifying “leitmotif” to our book. 
Here are some the highlights of the Fifth Edition...
 This book now has a website, softwaretestcraft.org (also .com) that contains all Java code, powerpoint presentations, and various notes.
 Parts 2, 3, and 4 are essentially object-oriented. All pseudo-code examples are now converted to Java. Unit testing examples use {JUnit}.
 We included specific information on commercial and open-source tools for code-based testing. Also, we added three examples of commercial Model-Based Testing products to the Model-Based Testing chapter.
 Testing object-oriented software is consolidated in a single chapter.
 There is a new chapter on the feature interaction problem.
 There is a new emphasis (and example) for modeling and testing event-driven systems.
 We retained the chapter on technical inspections and the corresponding appendix},
	author = {Jorgensen, Paul and {DeVries}, Byron},
	date = {2021-05-31},
	doi = {10.1201/9781003168447},
}

@book{kaner_testing_1999,
	location = {{USA}},
	edition = {2nd},
	title = {Testing Computer Software, Second Edition},
	isbn = {978-0-471-35846-6},
	abstract = {From the Publisher: This book will teach you how to test computer software under real-world conditions. The authors have all been test managers and software development managers at well-known Silicon Valley software companies. Successful consumer software companies have learned how to produce high-quality products under tight time and budget constraints. The book explains the testing side of that success. Who this book is for:*Testers and Test Managers*Project Managers-Understand the timeline, depth of investigation, and quality of communication to hold testers accountable for.*Programmers-Gain insight into the sources of errors in your code, understand what tests your work will have to pass, and why testers do the things they do.*Students-Train for an entry-level position in software development. What you will learn:*How to find important bugs quickly*How to describe software errors clearly*How to create a testing plan with a minimum of paperwork*How to design and use a bug-tracking system*Where testing fits in the product development process*How to test products that will be translated into other languages*How to test for compatibility with devices, such as printers*What laws apply to software quality {JACK} {FALK} consults on software quality management and software engineering management. Jack is certified in Software Quality Engineering by the American Society of Quality. He is Vice Chair of the Santa Clara Valley Software Quality Association and an active participant in the Los Altos Workshops on Software Testing. {HUNG} Q. {NGUYEN} is Founder, President, and {CEO} of {softGear} technology. He has worked in the computer software and hardware industries, holding management positionsinengineering, quality assurance, testing, product development, and information technology, as well as making significant contributions as a tester and programmer. He is an {ASQ}-Certified Quality Engineer, and a senior member and San Francisco Section Certification Chairman of the American Society for Quality.},
	pagetotal = {480},
	publisher = {John Wiley \& Sons, Inc.},
	author = {Kaner, Cem and Falk, Jack L. and Nguyen, Hung Quoc},
	date = {1999-03},
}

@inproceedings{otto_addressing_2007,
	title = {Addressing Legal Requirements in Requirements Engineering},
	doi = {10.1109/RE.2007.65},
	abstract = {Legal texts, such as regulations and legislation, are playing an increasingly important role in requirements engineering and system development. Monitoring systems for requirements and policy compliance has been recognized in the requirements engineering community as a key area for research. Similarly, regulatory compliance is critical in systems that are governed by regulations and law, especially given that non-compliance can result in both financial and criminal penalties. Working with legal texts can be very challenging, however, because they contain numerous ambiguities, cross-references, domain-specific definitions, and acronyms, and are frequently amended via new regulations and case law. Requirements engineers and compliance auditors must be able to identify relevant regulations, extract requirements and other key concepts, and monitor compliance throughout the software lifecycle. This paper surveys research efforts over the past 50 years in handling legal texts for systems development. These efforts include the use of symbolic logic, logic programming, first-order temporal logic, deontic logic, defeasible logic, goal modeling, and semi-structured representations. This survey can aid requirements engineers and auditors to better specify, monitor, and test software systems for compliance.},
	eventtitle = {15th {IEEE} International Requirements Engineering Conference ({RE} 2007)},
	pages = {5--14},
	booktitle = {15th {IEEE} International Requirements Engineering Conference ({RE} 2007)},
	author = {Otto, Paul N. and Anton, Annie I.},
	date = {2007-10},
	note = {{ISSN}: 2332-6441},
	keywords = {Monitoring, Software systems, Computer science, Government, Information security, Law, Legal factors, Legislation, Logic programming, Systems engineering and theory},
	file = {IEEE Xplore Abstract Record:/home/jliang/Zotero/storage/HT5KPE7X/4384161.html:text/html;IEEE Xplore Full Text PDF:/home/jliang/Zotero/storage/2KIWZECH/Otto and Anton - 2007 - Addressing Legal Requirements in Requirements Engi.pdf:application/pdf},
}

@article{hierons_software_2006,
	title = {Software Testing Foundations: A Study Guide for the Certified Tester Exam. By Andreas Spillner, Tilo Linz and Hans Schaefer. Published by dpunkt.verlag, Heidelberg, Germany, 2006. {ISBN}: 3-89864-363-8, pp 266: Book Reviews},
	volume = {16},
	issn = {0960-0833},
	shorttitle = {Software Testing Foundations},
	pages = {289--290},
	number = {4},
	journaltitle = {Softw. Test. Verif. Reliab.},
	author = {Hierons, Robert M.},
	date = {2006-12-01},
}